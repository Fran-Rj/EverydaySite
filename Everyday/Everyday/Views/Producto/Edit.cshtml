@model Everyday.Models.Producto

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<hr />
<div style="margin:auto; background-color:transparent;" class="container card">
    @using ((Html.BeginForm("Edit", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" })))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.idProd)
        <div style="justify-content: space-between; display: flex; background-color: transparent; height: 560px;">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div id="box-img" style="background-color: transparent; width:500px; height: 500px">
                <div>
                    <img id="imgProd" src="@Url.Action("MostrarImagen",  "Producto", new { Id = Model.idProd })" style="width: 400px; height:400px;" alt="None..." />
                </div>
                <br />
                <div id="box-btnFile">
                    <input id="uploadImg" type="file" name="File" />
                </div>
            </div>
            <div style="width: 400px; height: 500px; border-radius: 7px; background-color: transparent;">
                <div>
                    <br />
                    <label>Nombre</label>
                    <div>
                        @Html.EditorFor(model => model.nameProd, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nameProd, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div>
                    <br />
                    <label>Descripción</label>
                    <div>
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div>
                    <br />
                    <label>Precio</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div>
                    <br />
                    <label>Stock</label>
                    <div>
                        @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div style="background-color: transparent; border-radius: 7px; width: 400px; height: 500px; ">
                <div>
                    <br />
                    <label>Estado</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div>
                    <br />
                    <label>Tipo</label>
                    <div>
                        @Html.DropDownList("idType", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div>
                    <br />
                    <label>Marca</label>
                    <div>
                        @Html.DropDownList("idMarc", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idMarc, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div style="background-color: transparent;">
                    <br />
                    <label>Categoria</label>
                    <div>
                        @Html.DropDownList("idCateg", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idCateg, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div style="padding:15px; margin-top:-90px; justify-content: space-between; display: flex;">
            <div>
                <input type="submit" value="Actualizar" class="btn btn-success" />
            </div>
            <div>
                @Html.ActionLink("Volver", "Index", null, htmlAttributes: new { @class = "btn btn-warning" })
            </div>
        </div>
    }
</div>

<script>
    const input = document.getElementById('uploadImg');
    const img = document.getElementById('imgProd');

    input.addEventListener('change', () => {
        const file = input.files[0];
        const reader = new FileReader();

        reader.addEventListener('load', () => {
            img.src = reader.result;
        });

        reader.readAsDataURL(file);
    });
</script>