@model Everyday.Models.Producto

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #box-img {
        /*margin: auto;*/
        border-radius: 7px;
        box-sizing: border-box;
        background-color: transparent;
        width: 330px;
        height: 320px;
        padding: 15px;
    }

    .container {
        margin: auto;
        justify-content:center;
        justify-items:center;
    }

    .form-group {
        margin: 15px 100px auto;
    }

    .col-md-10 {
        margin-bottom: 5px;
    }
</style>

<div class="container">
    <hr />
    @using (Html.BeginForm("Create", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div style="display: flex; background-color: transparent; height:560px;">
            <div class="form-group" id="box-img" style="background-color: transparent; margin-top:30px; width:500px; height: 500px">
                <div class="col-md-10">
                    <img id="imgProd" src="~/Image/ropa.jpg" style="width: 400px; height:400px;" alt="None..." />
                </div>
                <br />
                <div id="box-btnFile">
                    <input id="uploadImg" type="file" name="File" />
                </div>
            </div>
            <div style="width:100%; background-color: transparent;">
                <div class="form-group">
                    <label>Nombre</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nameProd, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nameProd, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label>Descripción</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label>Cantidad</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label>Precio</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label>Stock</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idMarc, "Marca", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("idMarc", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idMarc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idCateg, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("idCateg", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idCateg, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div style="display: flex;" class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-warning" })
            </div>
        </div>
    }
</div>

<script>
    const input = document.getElementById('uploadImg');
    const img = document.getElementById('imgProd');

    input.addEventListener('change', () => {
        const file = input.files[0];
        const reader = new FileReader();

        reader.addEventListener('load', () => {
            img.src = reader.result;
        });

        reader.readAsDataURL(file);
    });
</script>